FROM rockylinux:9
LABEL org.opencontainers.image.vendor="NSA Laboratory for Advanced Cybersecurity Research"
LABEL org.opencontainers.image.source="https://github.com/nsacyber/paccor"
LABEL org.opencontainers.image.description="Tools for build, test, and deployment of paccor and HIRS projects."

# REF can be specified as a docker run environment variable to select the HIRS branch to work with
ENV REF=main
# BUILD, is an environment variable that if not empty, will attempt to run gradle bootWar on the cloned branch
ENV BUILD=
# PREF can be specified as a docker run environment variable to select the paccor branch to work with
ENV PREF=main

SHELL ["/bin/bash", "-c"]

# Rocky 9 has a different channel for some apps
RUN dnf install -y 'dnf-command(config-manager)' && dnf config-manager --set-enabled crb

# Update and install OS-dependencies
RUN dnf update -y
# Dependencies were selected for these reasons:
#   OS setup/Unknown direct impact for HIRS
ENV HIRS_DNF_OS_SETUP="initscripts firewalld policycoreutils policycoreutils-python-utils net-tools" 
#   OS tools
ENV HIRS_DNF_OS_TOOLS="git sudo vim wget"
#   ACA compile
ENV HIRS_DNF_ACA_COMPILE="java-17-openjdk-devel"
#   ACA run
ENV HIRS_DNF_ACA_RUN="mariadb-server"
#   IBM TPM simulator compile
ENV HIRS_DNF_TPM_COMPILE="tpm2-tools gcc cmake openssl-devel"
#   IBM TSS compile
ENV HIRS_DNF_TSS_COMPILE="autoconf automake libtool"
#   .NET SDK
ENV HIRS_DNF_DOTNET_SDK="dotnet-sdk-8.0"
#   Paccor
ENV HIRS_DNF_PACCOR=""
# Download and install all dependencies at one time
RUN dnf -y install $(echo "$HIRS_DNF_OS_SETUP") $(echo "$HIRS_DNF_OS_TOOLS") $(echo "$HIRS_DNF_ACA_COMPILE") $(echo "$HIRS_DNF_ACA_RUN") $(echo "$HIRS_DNF_TPM_COMPILE") $(echo "$HIRS_DNF_TSS_COMPILE") $(echo "$HIRS_DNF_DOTNET_SDK") $(echo "$HIRS_DNF_PACCOR")

# Install dotnet tools
RUN dotnet tool install --global dotnet-deb
RUN dotnet tool install --global dotnet-rpm
RUN dotnet tool install --global dotnet-zip
# Add dotnet PATHs
ENV PATH="/root/.dotnet:/root/.dotnet/tools:$PATH"

# Build IBM TPM Simulator
RUN git clone https://github.com/kgoldman/ibmswtpm2 /ibmswtpm2
WORKDIR /ibmswtpm2/src
RUN make

# Build IBM TPM tools
RUN git clone https://github.com/kgoldman/ibmtss /ibmtss
WORKDIR /ibmtss/utils
RUN make -f makefiletpmc

# The following script tests that the SW TPM and TSS were compiled in the docker image. And documents how to start the SW TPM after container launch using both IBM's tss and TPM2-TOOLS.
RUN echo "#!/bin/bash" > /tmp/tpm_config && \
    echo "/ibmswtpm2/src/tpm_server &" >> /tmp/tpm_config && \
    echo "sleep 5" >> /tmp/tpm_config && \
    echo "/ibmtss/utils/startup -c" >> /tmp/tpm_config && \
    echo "tpm2_shutdown" >> /tmp/tpm_config && \
    echo "tpm2_startup -c" >> /tmp/tpm_config && \
    echo "/ibmtss/utils/shutdown -c" >> /tmp/tpm_config && \
    bash /tmp/tpm_config && \
    rm -rf /tmp/tpm_config

# Checkout paccor
RUN git clone -b main https://github.com/nsacyber/paccor.git /paccor

# Checkout HIRS
RUN git clone -b main https://github.com/nsacyber/HIRS.git /hirs

COPY ./checkout_build.sh /tmp/
RUN chmod 755 /tmp/checkout_build.sh
RUN /tmp/checkout_build.sh ${REF} ${PREF} y

# Reset working directory
WORKDIR /paccor

# On container launch, checkout and build as requested then leave at the command prompt.
CMD ["bash", "-c", "/tmp/checkout_build.sh ${REF} ${PREF} ${BUILD} && /bin/bash"]
