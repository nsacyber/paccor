<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Authors>NSA Cybersecurity Directorate</Authors>
    <PackageId>paccor.HardwareManifestPlugin</PackageId>
    <PackageVersion>2.0.1</PackageVersion>
    <PackageTags>paccor;platform;certificate;hardware;manifest;interface</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageIcon>icon.png</PackageIcon>
    <!--Source Link github.com/dotnet/sourcelink -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="3.20.1" />
    <PackageReference Include="Google.Protobuf.Tools" Version="3.20.1">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!--Source Link -->
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
    <PackageReference Include="PlatformCertificate.Proto" Version="2.0.3" />
    <PackageReference Include="PlatformCertificate.Proto.ProtoFiles" Version="2.0.7" />
  </ItemGroup>

  <ItemGroup>
    <!--Package resources -->
    <None Include="..\..\..\LICENSE.md" Pack="true" PackagePath="LICENSE.md" />
    <None Include="..\..\..\images\paccorpluginslogoicon.png" Pack="true" PackagePath="icon.png" />
    <None Include="README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <Target Name="BuildProto" BeforeTargets="PreBuildEvent">
    <PropertyGroup>
      <FOLDER_PROTO>$(ProjectDir)Resources</FOLDER_PROTO>
      <FOLDER_OUT>$(ProjectDir)generated</FOLDER_OUT>
    </PropertyGroup>
    <PropertyGroup>
      <protoc Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X64'">$(protoc_linux64)</protoc>
      <protoc Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X86'">$(protoc_linux86)</protoc>
      <protoc Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X64'">$(protoc_macosx64)</protoc>
      <protoc Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X86'">$(protoc_macosx86)</protoc>
      <protoc Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X64'">$(protoc_windows64)</protoc>
      <protoc Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X86'">$(protoc_windows86)</protoc>
    </PropertyGroup>
    <Exec Condition="!Exists('$(FOLDER_OUT)')" Command="mkdir $(FOLDER_OUT)" />
    <Exec Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))'" Command="for /f %%i in ('dir /s /b $(FOLDER_PROTO)\*.proto') do (  $(protoc) --proto_path=$(protoc_tools) --proto_path=$(PlatformCertificateProtoFilesDir) -I=$(FOLDER_PROTO) --csharp_out=$(FOLDER_OUT) %%i )" />
    <Exec Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))'" Command="for file in `ls -1R $(FOLDER_PROTO)/*.proto` ; do $(protoc) --proto_path=$(protoc_tools) -I=$(FOLDER_PROTO) --csharp_out=$(FOLDER_OUT) $file; done " />

    <ItemGroup>
      <GeneratedFiles Include="$(FOLDER_OUT)/*.cs;" />
    </ItemGroup>
    <Message Text="The protobuf compiler successfully generated:" Importance="high" />
    <Message Text="    %(GeneratedFiles.Filename)%(GeneratedFiles.Extension)" Importance="high" />
  </Target>
</Project>
