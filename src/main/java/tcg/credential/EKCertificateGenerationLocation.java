package tcg.credential;

import lombok.AllArgsConstructor;
import lombok.Getter;

/**
 * <pre>
 * EKCertificateGenerationLocation ::= ENUMERATED {
 *      tpmManufacturer (0),
 *      platformManufacturer (1),
 *      ekCertSigner (2) }
 * </pre>
 */
public class EKCertificateGenerationLocation extends ASN1EnumeratedEnumBase<EKCertificateGenerationLocation.Enumerated> {
	/**
	 * Factory object used to provide conversion context.
	 */
	public static final Factory<Enumerated, EKCertificateGenerationLocation> FACTORY = factory(Enumerated.class, EKCertificateGenerationLocation::new);

	/**
	 * EKCertificateGenerationLocation options
	 */
	@AllArgsConstructor
	@Getter
	public enum Enumerated implements EnumWithIntegerValue {
		/**
		 * tpmManufacturer: EK certificate generated by the TPM manufacturer
		 */
		tpmManufacturer(0),
		/**
		 * platformManufacturer: EK certificate generated by the platform manufacturer
		 */
		platformManufacturer(1),
		/**
		 * ekCertSigner: EK Certificate generated and signed by the same entity
		 */
		ekCertSigner(2);

		private final int value;
	}

	/**
	 * Convert data into a EKCertificateGenerationLocation object.
	 * @param obj Could be any type that can be transformed into ASN1Enumerated
	 * @return EKCertificateGenerationLocation
	 */
	public static EKCertificateGenerationLocation getInstance(Object obj) {
		return ASN1EnumBase.getInstance(obj, FACTORY);
	}

	/**
	 * New EKCertificateGenerationLocation, looking up the given value in the enum class.
	 * @param value value to look up
	 */
	public EKCertificateGenerationLocation(int value) {
		super(value, Enumerated.class);
	}
}
